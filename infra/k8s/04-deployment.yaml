apiVersion: apps/v1
kind: Deployment
metadata:
  name: zmnnoory-backend
  namespace: zmnnoory
  labels:
    app: zmnnoory-backend
    version: v1
spec:
  # 기본 3개 인스턴스로 다중화
  replicas: 3
  
  # 무중단 배포 전략 (Rolling Update)
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1    # 최대 1개 Pod까지 중단 허용
      maxSurge: 1          # 최대 1개 Pod까지 추가 생성 허용
  
  selector:
    matchLabels:
      app: zmnnoory-backend
  
  template:
    metadata:
      labels:
        app: zmnnoory-backend
        version: v1
    spec:
      # 호스트 네트워크 접근을 위한 설정
      hostNetwork: false
      dnsPolicy: ClusterFirst
      
      containers:
      - name: backend
        image: your-registry/zmnnoory:latest  # GitLab CI에서 교체될 이미지
        imagePullPolicy: Always
        
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        
        # 환경변수 설정 (ConfigMap과 Secret에서 가져오기)
        env:
        # ConfigMap에서 가져오는 환경변수들
        - name: SPRING_PROFILES_ACTIVE
          valueFrom:
            configMapKeyRef:
              name: zmnnoory-config
              key: SPRING_PROFILES_ACTIVE
        - name: SERVER_PORT
          valueFrom:
            configMapKeyRef:
              name: zmnnoory-config
              key: SERVER_PORT
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: zmnnoory-config
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: zmnnoory-config
              key: DB_PORT
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: zmnnoory-config
              key: DB_NAME
        - name: DB_USERNAME
          valueFrom:
            configMapKeyRef:
              name: zmnnoory-config
              key: DB_USERNAME
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: zmnnoory-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: zmnnoory-config
              key: REDIS_PORT
        - name: JWT_ISSUER
          valueFrom:
            configMapKeyRef:
              name: zmnnoory-config
              key: JWT_ISSUER
        - name: JWT_EXPIRATION
          valueFrom:
            configMapKeyRef:
              name: zmnnoory-config
              key: JWT_EXPIRATION
        - name: DDL_AUTO
          valueFrom:
            configMapKeyRef:
              name: zmnnoory-config
              key: DDL_AUTO
        
        # Secret에서 가져오는 민감한 환경변수들
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: zmnnoory-secret
              key: JWT_SECRET_KEY
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: zmnnoory-secret
              key: DB_PASSWORD
        
        # 리소스 제한 설정
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        
        # Liveness Probe: 컨테이너가 살아있는지 확인
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 8080
          initialDelaySeconds: 60  # 애플리케이션 시작 대기 시간
          periodSeconds: 10        # 10초마다 체크
          timeoutSeconds: 5        # 5초 timeout
          failureThreshold: 3      # 3번 실패 시 재시작
          successThreshold: 1
        
        # Readiness Probe: 트래픽을 받을 준비가 되었는지 확인
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8080
          initialDelaySeconds: 30  # 30초 후 시작
          periodSeconds: 5         # 5초마다 체크
          timeoutSeconds: 3        # 3초 timeout
          failureThreshold: 3      # 3번 실패 시 트래픽 차단
          successThreshold: 1
        
        # Startup Probe: 애플리케이션 시작 완료 확인
        startupProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 10     # 최대 100초까지 시작 대기
          successThreshold: 1
      
      # Pod 재시작 정책
      restartPolicy: Always
      
      # Pod 종료 시 graceful shutdown 대기 시간
      terminationGracePeriodSeconds: 30 